{
    "openapi": "3.0.1",
    "info": {
        "title": "Communication Management API",
        "version": "4.0.0",
        "description": "This is Swagger UI environment generated for the TMF Communication Management specification"
    },
    "servers": [
        {
            "url": "https://serverRoot/tmf-api/communicationManagement/v4/"
        }
    ],
    "paths": {
        "/communicationMessage": {
            "get": {
                "tags": [
                    "communicationMessage"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "headers": {
                            "X-Total-Count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Total number of items matching criteria"
                            },
                            "X-Result-Count": {
                                "schema": {
                                    "type": "integer"
                                },
                                "description": "Actual number of items returned in the response body"
                            }
                        },
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommunicationMessage"
                                    }
                                },
                                "examples": {
                                    "GET communicationMessage Response": {
                                        "value": [
                                            {
                                                "id": "1708",
                                                "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/1708",
                                                "subject": "News: the latest promotion for you",
                                                "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                                "state": "initial",
                                                "description": "this is communication message for promotion",
                                                "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                                "messageType": "SMS",
                                                "characteristic": [
                                                    {
                                                        "name": "$Parameter1",
                                                        "value": "Mr. Jones",
                                                        "valueType": "string"
                                                    },
                                                    {
                                                        "name": "$Parameter2",
                                                        "value": "4G_LTE Discount 30%",
                                                        "valueType": "string"
                                                    }
                                                ],
                                                "attachment": [
                                                    {
                                                        "url": "https://serverlocation/files/1",
                                                        "name": "File_XYZ_001"
                                                    }
                                                ],
                                                "sender": {
                                                    "id": "10099",
                                                    "name": "ABC Company",
                                                    "phoneNumber": "10086"
                                                },
                                                "receiver": [
                                                    {
                                                        "id": "10234",
                                                        "name": "Customer",
                                                        "phoneNumber": "008613811112222",
                                                        "party": {
                                                            "id": "991",
                                                            "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                            "role": "customer",
                                                            "name": "John White",
                                                            "@referredType": "Individual"
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "id": "2708",
                                                "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/2708",
                                                "subject": "News: the latest promotion for you",
                                                "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                                "state": "initial",
                                                "description": "this is communication message for promotion",
                                                "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                                "messageType": "Email",
                                                "characteristic": [
                                                    {
                                                        "name": "$Parameter1",
                                                        "value": "Mrs. Jones",
                                                        "valueType": "string"
                                                    },
                                                    {
                                                        "name": "$Parameter2",
                                                        "value": "4G_LTE Discount 30%",
                                                        "valueType": "string"
                                                    }
                                                ],
                                                "attachment": [
                                                    {
                                                        "url": "https://serverlocation/files/1",
                                                        "name": "File_XYZ_001"
                                                    }
                                                ],
                                                "sender": {
                                                    "id": "10099",
                                                    "name": "ABC Company",
                                                    "phoneNumber": "10086"
                                                },
                                                "receiver": [
                                                    {
                                                        "id": "10234",
                                                        "name": "Customer",
                                                        "phoneNumber": "008613222211111",
                                                        "party": {
                                                            "id": "1091",
                                                            "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                            "role": "customer",
                                                            "name": "Sara White",
                                                            "@referredType": "Individual"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "400": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "405": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Method Not allowed"
                    },
                    "409": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "listCommunicationMessage",
                "summary": "List or find CommunicationMessage objects",
                "description": "This operation list or find CommunicationMessage entities"
            },
            "post": {
                "requestBody": {
                    "description": "The CommunicationMessage to be created",
                    "content": {
                        "application/json;charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/CommunicationMessage_Create"
                            },
                            "examples": {
                                "POST communicationMessage Request 1": {
                                    "value": {
                                        "subject": "News: the latest promotion for you",
                                        "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                        "state": "inProgress",
                                        "description": "this is communication message for promotion",
                                        "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                        "messageType": "Email",
                                        "characteristic": [
                                            {
                                                "name": "$Parameter1",
                                                "value": "Mrs. Jones",
                                                "valueType": "string"
                                            },
                                            {
                                                "name": "$Parameter2",
                                                "value": "4G_LTE Discount 30%",
                                                "valueType": "string"
                                            }
                                        ],
                                        "attachment": [
                                            {
                                                "url": "https://serverlocation/files/1",
                                                "name": "File_XYZ_001"
                                            }
                                        ],
                                        "sender": {
                                            "id": "10099",
                                            "name": "ABC Company",
                                            "phoneNumber": "10086"
                                        },
                                        "receiver": [
                                            {
                                                "id": "10234",
                                                "name": "Customer",
                                                "phoneNumber": "008613811112222",
                                                "party": {
                                                    "id": "991",
                                                    "href": "http://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                    "role": "customer",
                                                    "name": "John White",
                                                    "@referredType": "Individual"
                                                }
                                            }
                                        ]
                                    }
                                },
                                "POST communicationMessage Request 2": {
                                    "value": {
                                        "subject": "News: the latest promotion for you",
                                        "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                        "state": "initial",
                                        "description": "this is communication message for promotion",
                                        "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                        "messageType": "SMS",
                                        "characteristic": [
                                            {
                                                "name": "$Parameter1",
                                                "value": "Mr. Jones",
                                                "valueType": "string"
                                            },
                                            {
                                                "name": "$Parameter2",
                                                "value": "4G_LTE Discount 30%",
                                                "valueType": "string"
                                            }
                                        ],
                                        "attachment": [
                                            {
                                                "url": "https://serverlocation/files/1",
                                                "name": "File_XYZ_001"
                                            }
                                        ],
                                        "sender": {
                                            "id": "10099",
                                            "name": "ABC Company",
                                            "phoneNumber": "10086"
                                        },
                                        "receiver": [
                                            {
                                                "id": "10234",
                                                "name": "Customer",
                                                "phoneNumber": "008613811112222",
                                                "party": {
                                                    "id": "991",
                                                    "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                    "role": "customer",
                                                    "name": "John White",
                                                    "@referredType": "Individual"
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "communicationMessage"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationMessage"
                                },
                                "examples": {
                                    "POST communicationMessage Response 1": {
                                        "value": {
                                            "id": "2708",
                                            "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/2708",
                                            "subject": "News: the latest promotion for you",
                                            "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                            "state": "initial",
                                            "description": "this is communication message for promotion",
                                            "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                            "messageType": "Email",
                                            "characteristic": [
                                                {
                                                    "name": "$Parameter1",
                                                    "value": "Mrs. Jones",
                                                    "valueType": "string"
                                                },
                                                {
                                                    "name": "$Parameter2",
                                                    "value": "4G_LTE Discount 30%",
                                                    "valueType": "string"
                                                }
                                            ],
                                            "attachment": [
                                                {
                                                    "url": "https://serverlocation/files/1",
                                                    "name": "File_XYZ_001"
                                                }
                                            ],
                                            "sender": {
                                                "id": "10099",
                                                "name": "ABC Company",
                                                "phoneNumber": "10086"
                                            },
                                            "receiver": [
                                                {
                                                    "id": "10234",
                                                    "name": "Customer",
                                                    "phoneNumber": "008613222211111",
                                                    "party": {
                                                        "id": "1091",
                                                        "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                        "role": "customer",
                                                        "name": "Sara White",
                                                        "@referredType": "Individual"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "POST communicationMessage Response 2": {
                                        "value": {
                                            "id": "1708",
                                            "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/1708",
                                            "subject": "News: the latest promotion for you",
                                            "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                            "state": "initial",
                                            "description": "this is communication message for promotion",
                                            "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                            "messageType": "SMS",
                                            "characteristic": [
                                                {
                                                    "name": "$Parameter1",
                                                    "value": "Mr. Jones",
                                                    "valueType": "string"
                                                },
                                                {
                                                    "name": "$Parameter2",
                                                    "value": "4G_LTE Discount 30%",
                                                    "valueType": "string"
                                                }
                                            ],
                                            "attachment": [
                                                {
                                                    "url": "https://serverlocation/files/1",
                                                    "name": "File_XYZ_001"
                                                }
                                            ],
                                            "sender": {
                                                "id": "10099",
                                                "name": "ABC Company",
                                                "phoneNumber": "10086"
                                            },
                                            "receiver": [
                                                {
                                                    "id": "10234",
                                                    "name": "Customer",
                                                    "phoneNumber": "008613811112222",
                                                    "party": {
                                                        "id": "991",
                                                        "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                        "role": "customer",
                                                        "name": "John White",
                                                        "@referredType": "Individual"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "405": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Method Not allowed"
                    },
                    "409": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "createCommunicationMessage",
                "summary": "Creates a CommunicationMessage",
                "description": "This operation creates a CommunicationMessage entity.",
                "x-codegen-request-body-name": "communicationMessage"
            }
        },
        "/communicationMessage/{id}": {
            "get": {
                "tags": [
                    "communicationMessage"
                ],
                "parameters": [
                    {
                        "examples": {
                            "2708": {
                                "value": "2708"
                            },
                            "1798": {
                                "value": "1798"
                            }
                        },
                        "name": "id",
                        "description": "Identifier of the CommunicationMessage",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationMessage"
                                },
                                "examples": {
                                    "GET communicationMessage 1708 Response": {
                                        "value": {
                                            "id": "1708",
                                            "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/1708",
                                            "subject": "News: the latest promotion for you",
                                            "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                            "state": "initial",
                                            "description": "this is communication message for promotion",
                                            "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                            "messageType": "SMS",
                                            "characteristic": [
                                                {
                                                    "name": "$Parameter1",
                                                    "value": "Mr. Jones",
                                                    "valueType": "string"
                                                },
                                                {
                                                    "name": "$Parameter2",
                                                    "value": "4G_LTE Discount 30%",
                                                    "valueType": "string"
                                                }
                                            ],
                                            "attachment": [
                                                {
                                                    "url": "https://serverlocation/files/1",
                                                    "name": "File_XYZ_001"
                                                }
                                            ],
                                            "sender": {
                                                "id": "10099",
                                                "name": "ABC Company",
                                                "phoneNumber": "10086"
                                            },
                                            "receiver": [
                                                {
                                                    "id": "10234",
                                                    "name": "Customer",
                                                    "phoneNumber": "008613811112222",
                                                    "party": {
                                                        "id": "991",
                                                        "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                        "role": "customer",
                                                        "name": "John White",
                                                        "@referredType": "Individual"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "GET communicationMessage 2708 Response": {
                                        "value": {
                                            "id": "2708",
                                            "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/2708",
                                            "subject": "News: the latest promotion for you",
                                            "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                            "state": "initial",
                                            "description": "this is communication message for promotion",
                                            "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                            "messageType": "Email",
                                            "characteristic": [
                                                {
                                                    "name": "$Parameter1",
                                                    "value": "Mrs. Jones",
                                                    "valueType": "string"
                                                },
                                                {
                                                    "name": "$Parameter2",
                                                    "value": "4G_LTE Discount 30%",
                                                    "valueType": "string"
                                                }
                                            ],
                                            "attachment": [
                                                {
                                                    "url": "https://serverlocation/files/1",
                                                    "name": "File_XYZ_001"
                                                }
                                            ],
                                            "sender": {
                                                "id": "10099",
                                                "name": "ABC Company",
                                                "phoneNumber": "10086"
                                            },
                                            "receiver": [
                                                {
                                                    "id": "10234",
                                                    "name": "Customer",
                                                    "phoneNumber": "008613222211111",
                                                    "party": {
                                                        "id": "1091",
                                                        "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                        "role": "customer",
                                                        "name": "Sara White",
                                                        "@referredType": "Individual"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "2708": {
                                        "value": {
                                            "id": "2708",
                                            "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/2708",
                                            "subject": "News: the latest promotion for you",
                                            "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                            "state": "initial",
                                            "description": "this is communication message for promotion",
                                            "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                            "messageType": "Email",
                                            "characteristic": [
                                                {
                                                    "name": "$Parameter1",
                                                    "value": "Mrs. Jones",
                                                    "valueType": "string"
                                                },
                                                {
                                                    "name": "$Parameter2",
                                                    "value": "4G_LTE Discount 30%",
                                                    "valueType": "string"
                                                }
                                            ],
                                            "attachment": [
                                                {
                                                    "url": "https://serverlocation/files/1",
                                                    "name": "File_XYZ_001"
                                                }
                                            ],
                                            "sender": {
                                                "id": "10099",
                                                "name": "ABC Company",
                                                "phoneNumber": "10086"
                                            },
                                            "receiver": [
                                                {
                                                    "id": "10234",
                                                    "name": "Customer",
                                                    "phoneNumber": "008613222211111",
                                                    "party": {
                                                        "id": "1091",
                                                        "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                        "role": "customer",
                                                        "name": "Sara White",
                                                        "@referredType": "Individual"
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "1708": {
                                        "value": {
                                            "id": "1708",
                                            "href": "https://serverlocation/tmf-api/communicationManagement/v4/communicationMessage/1708",
                                            "subject": "News: the latest promotion for you",
                                            "scheduledSendTime": "2020-02-10T00:00:00+01:00",
                                            "state": "initial",
                                            "description": "this is communication message for promotion",
                                            "content": "Dear $Parameter1, Here is the information of the promotion $Parameter2",
                                            "messageType": "SMS",
                                            "characteristic": [
                                                {
                                                    "name": "$Parameter1",
                                                    "value": "Mr. Jones",
                                                    "valueType": "string"
                                                },
                                                {
                                                    "name": "$Parameter2",
                                                    "value": "4G_LTE Discount 30%",
                                                    "valueType": "string"
                                                }
                                            ],
                                            "attachment": [
                                                {
                                                    "url": "https://serverlocation/files/1",
                                                    "name": "File_XYZ_001"
                                                }
                                            ],
                                            "sender": {
                                                "id": "10099",
                                                "name": "ABC Company",
                                                "phoneNumber": "10086"
                                            },
                                            "receiver": [
                                                {
                                                    "id": "10234",
                                                    "name": "Customer",
                                                    "phoneNumber": "008613811112222",
                                                    "party": {
                                                        "id": "991",
                                                        "href": "https://serverlocation/tmf-api/partyManagement/v4/individual/1",
                                                        "role": "customer",
                                                        "name": "John White",
                                                        "@referredType": "Individual"
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Success"
                    },
                    "400": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "405": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Method Not allowed"
                    },
                    "409": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "retrieveCommunicationMessage",
                "summary": "Retrieves a CommunicationMessage by ID",
                "description": "This operation retrieves a CommunicationMessage entity. Attribute selection is enabled for all first level attributes."
            },
            "delete": {
                "tags": [
                    "communicationMessage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the CommunicationMessage",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "405": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Method Not allowed"
                    },
                    "409": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "deleteCommunicationMessage",
                "summary": "Deletes a CommunicationMessage",
                "description": "This operation deletes a CommunicationMessage entity."
            },
            "patch": {
                "requestBody": {
                    "description": "The CommunicationMessage to be updated",
                    "content": {
                        "application/json;charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/CommunicationMessage_Update"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "communicationMessage"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the CommunicationMessage",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommunicationMessage"
                                }
                            }
                        },
                        "description": "Updated"
                    },
                    "400": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "405": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Method Not allowed"
                    },
                    "409": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "patchCommunicationMessage",
                "summary": "Updates partially a CommunicationMessage",
                "description": "This operation updates partially a CommunicationMessage entity.",
                "x-codegen-request-body-name": "communicationMessage"
            }
        },
        "/hub": {
            "post": {
                "requestBody": {
                    "description": "Data containing the callback endpoint to deliver the information",
                    "content": {
                        "application/json;charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/EventSubscriptionInput"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "events subscription"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventSubscription"
                                }
                            }
                        },
                        "description": "Subscribed"
                    },
                    "400": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "405": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Method Not allowed"
                    },
                    "409": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "500": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "registerListener",
                "summary": "Register a listener",
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "x-codegen-request-body-name": "data"
            }
        },
        "/hub/{id}": {
            "delete": {
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "The id of the registered listener",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "405": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Method not allowed"
                    },
                    "500": {
                        "content": {
                            "application/json;charset=utf-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "operationId": "unregisterListener",
                "summary": "Unregister a listener",
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics."
            }
        }
    },
    "components": {
        "schemas": {
            "Any": {
                "type": "object"
            },
            "Attachment": {
                "description": "Complements the description of an element (for instance a product) through video, pictures...",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier for this particular attachment",
                        "type": "string"
                    },
                    "href": {
                        "description": "URI for this Attachment",
                        "type": "string"
                    },
                    "attachmentType": {
                        "description": "Attachment type such as video, picture",
                        "type": "string"
                    },
                    "content": {
                        "description": "The actual contents of the attachment object, if embedded, encoded as base64",
                        "type": "string"
                    },
                    "description": {
                        "description": "A narrative text describing the content of the attachment",
                        "type": "string"
                    },
                    "mimeType": {
                        "description": "Attachment mime type such as extension file for video, picture and document",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the attachment",
                        "type": "string"
                    },
                    "url": {
                        "description": "Uniform Resource Locator, is a web page address (a subset of URI)",
                        "type": "string"
                    },
                    "size": {
                        "$ref": "#/components/schemas/Quantity"
                    },
                    "validFor": {
                        "$ref": "#/components/schemas/TimePeriod"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "Characteristic": {
                "description": "Describes a given characteristic of an object or entity through a name/value pair.",
                "required": [
                    "name",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the characteristic",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the characteristic",
                        "type": "string"
                    },
                    "valueType": {
                        "description": "Data type of the value of the characteristic",
                        "type": "string"
                    },
                    "characteristicRelationship": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CharacteristicRelationship"
                        }
                    },
                    "value": {
                        "$ref": "#/components/schemas/Any"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "CharacteristicRelationship": {
                "description": "Another Characteristic that is related to the current Characteristic;",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the characteristic",
                        "type": "string"
                    },
                    "relationshipType": {
                        "description": "The type of relationship",
                        "type": "string"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "CommunicationMessage": {
                "description": "Communication message means a notification approach in the format of a message which can be dispatched (sent) to the certain user by the system with the content which can be felt and understood by the recipient. The user can be either a final customer or a customer service agent. The message can reach the customer in different interaction channels, including: email, short message, mobile app notification (push).",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier of Communication Message",
                        "type": "string"
                    },
                    "href": {
                        "description": "Hypertext Reference of the Communication Message",
                        "type": "string"
                    },
                    "content": {
                        "description": "The content of the communication message",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description for the whole object",
                        "type": "string"
                    },
                    "logFlag": {
                        "type": "boolean"
                    },
                    "messageType": {
                        "description": "The type of message, such as: SMS, Email, Mobile app push notification",
                        "type": "string"
                    },
                    "priority": {
                        "description": "The priority of the communication message.\nSmall number means higher priority.",
                        "type": "string"
                    },
                    "scheduledSendTime": {
                        "format": "date-time",
                        "description": "The scheduled time for sending the communication message",
                        "type": "string"
                    },
                    "sendTime": {
                        "format": "date-time",
                        "description": "The time of sending communication message",
                        "type": "string"
                    },
                    "sendTimeComplete": {
                        "format": "date-time",
                        "description": "The time of completion of sending communication message",
                        "type": "string"
                    },
                    "subject": {
                        "description": "The title of the message, necessary for the email and mobile app push",
                        "type": "string"
                    },
                    "tryTimes": {
                        "description": "How many times do you want to retry the delivery of this message?",
                        "type": "integer"
                    },
                    "attachment": {
                        "description": "Any attachment associated with this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "characteristic": {
                        "description": "Any additional characteristic(s) of this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Characteristic"
                        }
                    },
                    "receiver": {
                        "description": "The receiver(s) of this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Receiver"
                        }
                    },
                    "sender": {
                        "$ref": "#/components/schemas/Sender"
                    },
                    "state": {
                        "$ref": "#/components/schemas/CommunicationMessageStateType"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "CommunicationMessage_Create": {
                "description": "Communication message means a notification approach in the format of a message which can be dispatched (sent) to the certain user by the system with the content which can be felt and understood by the recipient. The user can be either a final customer or a customer service agent. The message can reach the customer in different interaction channels, including: email, short message, mobile app notification (push).\nSkipped properties: id,href",
                "required": [
                    "content",
                    "messageType",
                    "receiver",
                    "sender"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "description": "The content of the communication message",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description for the whole object",
                        "type": "string"
                    },
                    "logFlag": {
                        "type": "boolean"
                    },
                    "messageType": {
                        "description": "The type of message, such as: SMS, Email, Mobile app push notification",
                        "type": "string"
                    },
                    "priority": {
                        "description": "The priority of the communication message.\nSmall number means higher priority.",
                        "type": "string"
                    },
                    "scheduledSendTime": {
                        "format": "date-time",
                        "description": "The scheduled time for sending the communication message",
                        "type": "string"
                    },
                    "sendTime": {
                        "format": "date-time",
                        "description": "The time of sending communication message",
                        "type": "string"
                    },
                    "sendTimeComplete": {
                        "format": "date-time",
                        "description": "The time of completion of sending communication message",
                        "type": "string"
                    },
                    "subject": {
                        "description": "The title of the message, necessary for the email and mobile app push",
                        "type": "string"
                    },
                    "tryTimes": {
                        "description": "How many times do you want to retry the delivery of this message?",
                        "type": "integer"
                    },
                    "attachment": {
                        "description": "Any attachment associated with this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "characteristic": {
                        "description": "Any additional characteristic(s) of this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Characteristic"
                        }
                    },
                    "receiver": {
                        "description": "The receiver(s) of this message",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Receiver"
                        }
                    },
                    "sender": {
                        "$ref": "#/components/schemas/Sender"
                    },
                    "state": {
                        "$ref": "#/components/schemas/CommunicationMessageStateType"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "CommunicationMessage_Update": {
                "description": "Communication message means a notification approach in the format of a message which can be dispatched (sent) to the certain user by the system with the content which can be felt and understood by the recipient. The user can be either a final customer or a customer service agent. The message can reach the customer in different interaction channels, including: email, short message, mobile app notification (push).\nSkipped properties: id,href",
                "type": "object",
                "properties": {
                    "content": {
                        "description": "The content of the communication message",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description for the whole object",
                        "type": "string"
                    },
                    "logFlag": {
                        "type": "boolean"
                    },
                    "messageType": {
                        "description": "The type of message, such as: SMS, Email, Mobile app push notification",
                        "type": "string"
                    },
                    "priority": {
                        "description": "The priority of the communication message.\nSmall number means higher priority.",
                        "type": "string"
                    },
                    "scheduledSendTime": {
                        "format": "date-time",
                        "description": "The scheduled time for sending the communication message",
                        "type": "string"
                    },
                    "sendTime": {
                        "format": "date-time",
                        "description": "The time of sending communication message",
                        "type": "string"
                    },
                    "sendTimeComplete": {
                        "format": "date-time",
                        "description": "The time of completion of sending communication message",
                        "type": "string"
                    },
                    "subject": {
                        "description": "The title of the message, necessary for the email and mobile app push",
                        "type": "string"
                    },
                    "tryTimes": {
                        "description": "How many times do you want to retry the delivery of this message?",
                        "type": "integer"
                    },
                    "attachment": {
                        "description": "Any attachment associated with this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "characteristic": {
                        "description": "Any additional characteristic(s) of this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Characteristic"
                        }
                    },
                    "receiver": {
                        "description": "The receiver(s) of this message",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Receiver"
                        }
                    },
                    "sender": {
                        "$ref": "#/components/schemas/Sender"
                    },
                    "state": {
                        "$ref": "#/components/schemas/CommunicationMessageStateType"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "CommunicationMessageStateType": {
                "description": "Communication message state type",
                "enum": [
                    "initial",
                    "inProgress",
                    "completed",
                    "cancelled",
                    "failed"
                ],
                "type": "string"
            },
            "EntityRef": {
                "description": "Entity reference schema to be use for all entityRef class.",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier of a related entity.",
                        "type": "string"
                    },
                    "href": {
                        "description": "Reference of the related entity.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the related entity.",
                        "type": "string"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    },
                    "@referredType": {
                        "description": "The actual type of the target instance when needed for disambiguation.",
                        "type": "string"
                    }
                }
            },
            "Quantity": {
                "description": "An amount in a given unit",
                "type": "object",
                "properties": {
                    "amount": {
                        "format": "float",
                        "description": "Numeric value in a given unit",
                        "default": 1,
                        "type": "number"
                    },
                    "units": {
                        "description": "Unit",
                        "type": "string"
                    }
                }
            },
            "Receiver": {
                "description": "Receivers of the communication message.",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "ID of the receiver",
                        "type": "string"
                    },
                    "appUserId": {
                        "description": "ID of the mobile app user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Receiver address of email, if the communication type is email",
                        "type": "string"
                    },
                    "ip": {
                        "description": "IP address of the receiver",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the receiver",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "Phone number of the receiver, if the communication type is SMS.",
                        "type": "string"
                    },
                    "party": {
                        "$ref": "#/components/schemas/RelatedParty"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "RelatedParty": {
                "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
                "required": [
                    "@referredType",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Unique identifier of a related entity.",
                        "type": "string"
                    },
                    "href": {
                        "description": "Reference of the related entity.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the related entity.",
                        "type": "string"
                    },
                    "role": {
                        "description": "Role played by the related party",
                        "type": "string"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    },
                    "@referredType": {
                        "description": "The actual type of the target instance when needed for disambiguation.",
                        "type": "string"
                    }
                }
            },
            "Sender": {
                "description": "Sender of the communication message.",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "ID of the sender",
                        "type": "string"
                    },
                    "email": {
                        "description": "Sender address of email, if the communication type is email",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the sender",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "Phone number of the sender, if the communication type is SMS.",
                        "type": "string"
                    },
                    "party": {
                        "$ref": "#/components/schemas/RelatedParty"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name",
                        "type": "string"
                    }
                }
            },
            "TimePeriod": {
                "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
                "type": "object",
                "properties": {
                    "endDateTime": {
                        "format": "date-time",
                        "description": "End of the time period, using IETC-RFC-3339 format",
                        "type": "string"
                    },
                    "startDateTime": {
                        "format": "date-time",
                        "description": "Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end",
                        "type": "string"
                    }
                }
            },
            "EventSubscription": {
                "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
                "required": [
                    "callback",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Id of the listener",
                        "type": "string"
                    },
                    "callback": {
                        "description": "The callback being registered.",
                        "type": "string"
                    },
                    "query": {
                        "description": "additional data to be passed",
                        "type": "string"
                    }
                }
            },
            "EventSubscriptionInput": {
                "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
                "required": [
                    "callback"
                ],
                "type": "object",
                "properties": {
                    "callback": {
                        "description": "The callback being registered.",
                        "type": "string"
                    },
                    "query": {
                        "description": "additional data to be passed",
                        "type": "string"
                    }
                }
            },
            "Error": {
                "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
                "required": [
                    "code",
                    "reason"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Application relevant detail, defined in the API or a common list.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Explanation of the reason for the error which can be shown to a client user.",
                        "type": "string"
                    },
                    "message": {
                        "description": "More details and corrective actions related to the error which can be shown to a client user.",
                        "type": "string"
                    },
                    "status": {
                        "description": "HTTP Error code extension",
                        "type": "string"
                    },
                    "referenceError": {
                        "format": "uri",
                        "description": "URI of documentation describing the error.",
                        "type": "string"
                    },
                    "@baseType": {
                        "description": "When sub-classing, this defines the super-class.",
                        "type": "string"
                    },
                    "@schemaLocation": {
                        "format": "uri",
                        "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
                        "type": "string"
                    },
                    "@type": {
                        "description": "When sub-classing, this defines the sub-class entity name.",
                        "type": "string"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "communicationMessage"
        },
        {
            "name": "events subscription"
        }
    ]
}